From 5b5ce6298e5a1c09beacd5c963e2350979cbf94a Mon Sep 17 00:00:00 2001
From: Lennart Poettering <lennart@poettering.net>
Date: Fri, 14 Aug 2020 21:50:55 +0200
Subject: [PATCH] test: accept that char device 0/0 can now be created witout
 privileges
Bug: https://github.com/systemd/systemd/issues/16721
Bug-Ubuntu: https://bugs.launchpad.net/systemd/+bug/1913189
Origin: upstream, https://github.com/systemd/systemd/commit/5b5ce6298e5a1c09beacd5c963e2350979cbf94a

Fixes: #16721
---
 src/test/test-fs-util.c   | 12 ++++++------
 src/test/test-stat-util.c |  2 +-
 2 files changed, 7 insertions(+), 7 deletions(-)

--- a/src/test/test-fs-util.c
+++ b/src/test/test-fs-util.c
@@ -618,8 +618,8 @@ static void test_touch_file(void) {
         assert_se(timespec_load(&st.st_mtim) == test_mtime);
 
         if (geteuid() == 0) {
-                a = strjoina(p, "/cdev");
-                r = mknod(a, 0775 | S_IFCHR, makedev(0, 0));
+                a = strjoina(p, "/bdev");
+                r = mknod(a, 0775 | S_IFBLK, makedev(0, 0));
                 if (r < 0 && errno == EPERM && detect_container() > 0) {
                         log_notice("Running in unprivileged container? Skipping remaining tests in %s", __func__);
                         return;
@@ -629,17 +629,17 @@ static void test_touch_file(void) {
                 assert_se(lstat(a, &st) >= 0);
                 assert_se(st.st_uid == test_uid);
                 assert_se(st.st_gid == test_gid);
-                assert_se(S_ISCHR(st.st_mode));
+                assert_se(S_ISBLK(st.st_mode));
                 assert_se((st.st_mode & 0777) == 0640);
                 assert_se(timespec_load(&st.st_mtim) == test_mtime);
 
-                a = strjoina(p, "/bdev");
-                assert_se(mknod(a, 0775 | S_IFBLK, makedev(0, 0)) >= 0);
+                a = strjoina(p, "/cdev");
+                assert_se(mknod(a, 0775 | S_IFCHR, makedev(0, 0)) >= 0);
                 assert_se(touch_file(a, false, test_mtime, test_uid, test_gid, 0640) >= 0);
                 assert_se(lstat(a, &st) >= 0);
                 assert_se(st.st_uid == test_uid);
                 assert_se(st.st_gid == test_gid);
-                assert_se(S_ISBLK(st.st_mode));
+                assert_se(S_ISCHR(st.st_mode));
                 assert_se((st.st_mode & 0777) == 0640);
                 assert_se(timespec_load(&st.st_mtim) == test_mtime);
         }
--- a/src/test/test-stat-util.c
+++ b/src/test/test-stat-util.c
@@ -148,7 +148,7 @@ static void test_device_path_make_canoni
         test_device_path_make_canonical_one("/dev/urandom");
         test_device_path_make_canonical_one("/dev/tty");
 
-        if (is_device_node("/run/systemd/inaccessible/chr") > 0) {
+        if (is_device_node("/run/systemd/inaccessible/blk") > 0) {
                 test_device_path_make_canonical_one("/run/systemd/inaccessible/chr");
                 test_device_path_make_canonical_one("/run/systemd/inaccessible/blk");
         }
