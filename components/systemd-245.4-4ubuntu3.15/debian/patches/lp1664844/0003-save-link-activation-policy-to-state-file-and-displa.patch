From a853652ae983699460b160bc2bf72f6fae0bfcd6 Mon Sep 17 00:00:00 2001
From: Dan Streetman <ddstreet@canonical.com>
Date: Thu, 13 Aug 2020 11:52:53 -0400
Subject: [PATCH 3/3] save link activation policy to state file and display in
 networkctl
Origin: upstream, https://github.com/systemd/systemd/pull/16228
Bug-Ubuntu: https://bugs.launchpad.net/netplan/+bug/1664844

---
 src/libsystemd/sd-network/sd-network.c      | 21 +++++++++++++++++++++
 src/network/networkctl.c                    | 12 +++++++++++-
 src/network/networkd-link.c                 |  3 +++
 src/systemd/sd-network.h                    |  5 +++++
 test/test-network/systemd-networkd-tests.py |  1 +
 5 files changed, 41 insertions(+), 1 deletion(-)

--- a/src/libsystemd/sd-network/sd-network.c
+++ b/src/libsystemd/sd-network/sd-network.c
@@ -204,6 +204,27 @@
         return 0;
 }
 
+_public_ int sd_network_link_get_activation_policy(int ifindex, char **policy) {
+        _cleanup_free_ char *s = NULL;
+        int r;
+
+        assert_return(policy, -EINVAL);
+
+        r = network_link_get_string(ifindex, "ACTIVATION_POLICY", &s);
+        if (r < 0) {
+                if (r != -ENODATA)
+                        return r;
+
+                /* For compatibility, assuming up. */
+                s = strdup("up");
+                if (!s)
+                        return -ENOMEM;
+        }
+
+        *policy = TAKE_PTR(s);
+        return 0;
+}
+
 _public_ int sd_network_link_get_llmnr(int ifindex, char **llmnr) {
         return network_link_get_string(ifindex, "LLMNR", llmnr);
 }
--- a/src/network/networkctl.c
+++ b/src/network/networkctl.c
@@ -1143,7 +1143,7 @@
                 const LinkInfo *info) {
 
         _cleanup_strv_free_ char **dns = NULL, **ntp = NULL, **search_domains = NULL, **route_domains = NULL;
-        _cleanup_free_ char *setup_state = NULL, *operational_state = NULL, *tz = NULL;
+        _cleanup_free_ char *setup_state = NULL, *operational_state = NULL, *tz = NULL, *activation_policy = NULL;
         _cleanup_free_ char *t = NULL, *network = NULL;
         const char *driver = NULL, *path = NULL, *vendor = NULL, *model = NULL, *link = NULL;
         const char *on_color_operational, *off_color_operational,
@@ -1531,6 +1531,16 @@
         if (r < 0)
                 return r;
 
+        r = sd_network_link_get_activation_policy(info->ifindex, &activation_policy);
+        if (r >= 0) {
+                r = table_add_many(table,
+                                   TABLE_EMPTY,
+                                   TABLE_STRING, "Activation Policy:",
+                                   TABLE_STRING, activation_policy);
+                if (r < 0)
+                        return table_log_add_error(r);
+        }
+
         (void) sd_network_link_get_timezone(info->ifindex, &tz);
         if (tz) {
                 r = table_add_many(table,
--- a/src/network/networkd-link.c
+++ b/src/network/networkd-link.c
@@ -4039,6 +4039,9 @@
                                 log_link_debug(link, "No DHCPv6 lease");
                 }
 
+                fprintf(f, "ACTIVATION_POLICY=%s\n",
+                        activation_policy_to_string(link->network->activation_policy));
+
                 fprintf(f, "NETWORK_FILE=%s\n", link->network->filename);
 
                 fputs("DNS=", f);
--- a/src/systemd/sd-network.h
+++ b/src/systemd/sd-network.h
@@ -103,6 +103,11 @@
  */
 int sd_network_link_get_required_for_online(int ifindex);
 
+/* Get activation policy for ifindex.
+ * Possible values are as specified for ActivationPolicy=
+ */
+int sd_network_link_get_activation_policy(int ifindex, char **policy);
+
 /* Get path to .network file applied to link */
 int sd_network_link_get_network_file(int ifindex, char **filename);
 
--- a/test/test-network/systemd-networkd-tests.py
+++ b/test/test-network/systemd-networkd-tests.py
@@ -2407,6 +2407,7 @@
             self.assertRegex(data, r'OPER_STATE=routable')
             self.assertRegex(data, r'REQUIRED_FOR_ONLINE=yes')
             self.assertRegex(data, r'REQUIRED_OPER_STATE_FOR_ONLINE=routable')
+            self.assertRegex(data, r'ACTIVATION_POLICY=up')
             self.assertRegex(data, r'NETWORK_FILE=/run/systemd/network/state-file-tests.network')
             self.assertRegex(data, r'DNS=10.10.10.10 10.10.10.11')
             self.assertRegex(data, r'NTP=0.fedora.pool.ntp.org 1.fedora.pool.ntp.org')
